TimeQuest Timing Analyzer report for Mod_Teste
Tue Feb 20 15:45:58 2024
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'CLOCK_50'
 12. Slow Model Setup: 'frequency_rot:divisor|clock_1hz'
 13. Slow Model Setup: 'counter_rot:contador|value[1]'
 14. Slow Model Hold: 'CLOCK_50'
 15. Slow Model Hold: 'frequency_rot:divisor|clock_1hz'
 16. Slow Model Hold: 'counter_rot:contador|value[1]'
 17. Slow Model Minimum Pulse Width: 'CLOCK_50'
 18. Slow Model Minimum Pulse Width: 'frequency_rot:divisor|clock_1hz'
 19. Slow Model Minimum Pulse Width: 'counter_rot:contador|value[1]'
 20. Clock to Output Times
 21. Minimum Clock to Output Times
 22. Fast Model Setup Summary
 23. Fast Model Hold Summary
 24. Fast Model Recovery Summary
 25. Fast Model Removal Summary
 26. Fast Model Minimum Pulse Width Summary
 27. Fast Model Setup: 'CLOCK_50'
 28. Fast Model Setup: 'frequency_rot:divisor|clock_1hz'
 29. Fast Model Setup: 'counter_rot:contador|value[1]'
 30. Fast Model Hold: 'CLOCK_50'
 31. Fast Model Hold: 'frequency_rot:divisor|clock_1hz'
 32. Fast Model Hold: 'counter_rot:contador|value[1]'
 33. Fast Model Minimum Pulse Width: 'CLOCK_50'
 34. Fast Model Minimum Pulse Width: 'frequency_rot:divisor|clock_1hz'
 35. Fast Model Minimum Pulse Width: 'counter_rot:contador|value[1]'
 36. Clock to Output Times
 37. Minimum Clock to Output Times
 38. Multicorner Timing Analysis Summary
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; Mod_Teste                                                         ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                           ;
+---------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------------------------------+
; Clock Name                      ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                             ;
+---------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------------------------------+
; CLOCK_50                        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                        ;
; counter_rot:contador|value[1]   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { counter_rot:contador|value[1] }   ;
; frequency_rot:divisor|clock_1hz ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { frequency_rot:divisor|clock_1hz } ;
+---------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-------------------------------------+


+------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                  ;
+------------+-----------------+---------------------------------+-------------------------+
; Fmax       ; Restricted Fmax ; Clock Name                      ; Note                    ;
+------------+-----------------+---------------------------------+-------------------------+
; INF MHz    ; 239.58 MHz      ; counter_rot:contador|value[1]   ; limit due to hold check ;
; 280.35 MHz ; 280.35 MHz      ; CLOCK_50                        ;                         ;
; 465.98 MHz ; 465.98 MHz      ; frequency_rot:divisor|clock_1hz ;                         ;
+------------+-----------------+---------------------------------+-------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+----------------------------------------------------------+
; Slow Model Setup Summary                                 ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; CLOCK_50                        ; -2.567 ; -119.850      ;
; frequency_rot:divisor|clock_1hz ; -1.146 ; -2.352        ;
; counter_rot:contador|value[1]   ; -0.874 ; -1.736        ;
+---------------------------------+--------+---------------+


+----------------------------------------------------------+
; Slow Model Hold Summary                                  ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; CLOCK_50                        ; -2.533 ; -2.533        ;
; frequency_rot:divisor|clock_1hz ; -2.229 ; -3.799        ;
; counter_rot:contador|value[1]   ; -2.087 ; -4.067        ;
+---------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                   ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; CLOCK_50                        ; -1.380 ; -79.380       ;
; frequency_rot:divisor|clock_1hz ; -0.500 ; -4.000        ;
; counter_rot:contador|value[1]   ; 0.500  ; 0.000         ;
+---------------------------------+--------+---------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                         ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.567 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.603      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.558 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.594      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.527 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.563      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.420 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.456      ;
; -2.413 ; frequency_rot:divisor|counter[11] ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.016      ; 3.465      ;
; -2.403 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.445      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.393 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.429      ;
; -2.332 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.374      ;
; -2.321 ; frequency_rot:divisor|counter[8]  ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.016      ; 3.373      ;
; -2.301 ; frequency_rot:divisor|counter[1]  ; frequency_rot:divisor|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.343      ;
; -2.298 ; frequency_rot:divisor|counter[10] ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.016      ; 3.350      ;
; -2.282 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.324      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.318      ;
; -2.282 ; frequency_rot:divisor|counter[7]  ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.016      ; 3.334      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.279 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.315      ;
; -2.274 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.316      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.266 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.293      ;
; -2.263 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.305      ;
; -2.261 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.303      ;
; -2.259 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.016      ; 3.311      ;
; -2.239 ; frequency_rot:divisor|counter[11] ; frequency_rot:divisor|counter[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.281      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.235 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.262      ;
; -2.234 ; frequency_rot:divisor|counter[4]  ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.016      ; 3.286      ;
; -2.234 ; frequency_rot:divisor|counter[1]  ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.016      ; 3.286      ;
; -2.231 ; frequency_rot:divisor|counter[2]  ; frequency_rot:divisor|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.273      ;
; -2.230 ; frequency_rot:divisor|counter[1]  ; frequency_rot:divisor|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 3.272      ;
; -2.226 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.253      ;
; -2.226 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 3.253      ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'frequency_rot:divisor|clock_1hz'                                                                                                                                 ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                       ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; -1.146 ; counter_rot:contador|value[0] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; -1.360     ; 0.822      ;
; -1.145 ; counter_rot:contador|value[0] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; -1.360     ; 0.821      ;
; -0.098 ; counter_rot:contador|value[2] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 1.134      ;
; -0.094 ; counter_rot:contador|value[3] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 1.130      ;
; -0.061 ; counter_rot:contador|value[0] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 1.097      ;
; 0.379  ; counter_rot:contador|value[0] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.657      ;
; 0.379  ; counter_rot:contador|value[3] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.657      ;
; 0.379  ; counter_rot:contador|value[2] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.657      ;
; 0.668  ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.500        ; 1.010      ; 1.128      ;
; 0.677  ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.500        ; 1.010      ; 1.119      ;
; 1.168  ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 1.000        ; 1.010      ; 1.128      ;
; 1.177  ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 1.000        ; 1.010      ; 1.119      ;
; 1.231  ; counter_rot:contador|value[2] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 1.360      ; 1.165      ;
; 1.234  ; counter_rot:contador|value[2] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 1.360      ; 1.162      ;
; 1.535  ; counter_rot:contador|value[3] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 1.360      ; 0.861      ;
; 1.539  ; counter_rot:contador|value[3] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 1.360      ; 0.857      ;
; 2.499  ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.500        ; 2.370      ; 0.657      ;
; 2.999  ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 1.000        ; 2.370      ; 0.657      ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'counter_rot:contador|value[1]'                                                                                                                                             ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                                   ; Launch Clock                    ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; -0.874 ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 0.782      ; 1.145      ;
; -0.862 ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 0.782      ; 1.164      ;
; 0.158  ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 2.142      ; 1.504      ;
; 0.178  ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 2.142      ; 1.453      ;
; 0.329  ; counter_rot:contador|value[2] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 2.142      ; 1.333      ;
; 1.500  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.500        ; 3.152      ; 1.422      ;
; 1.576  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.500        ; 3.152      ; 1.315      ;
; 2.000  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 1.000        ; 3.152      ; 1.422      ;
; 2.076  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 1.000        ; 3.152      ; 1.315      ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                                                             ;
+--------+-------------------------------------------+-------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                 ; To Node                                   ; Launch Clock                    ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------------+-------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; -2.533 ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz ; CLOCK_50    ; 0.000        ; 2.674      ; 0.657      ;
; -2.033 ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz ; CLOCK_50    ; -0.500       ; 2.674      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.535  ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_ST.000000             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.801      ;
; 0.535  ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.801      ;
; 0.540  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.806      ;
; 0.541  ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.807      ;
; 0.545  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000011             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.811      ;
; 0.547  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.813      ;
; 0.551  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.817      ;
; 0.557  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.823      ;
; 0.566  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.832      ;
; 0.685  ; LCD_TEST:MyLCD|mLCD_ST.000001             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.951      ;
; 0.698  ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.964      ;
; 0.735  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 0.997      ;
; 0.736  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 0.998      ;
; 0.788  ; LCD_TEST:MyLCD|mDLY[0]                    ; LCD_TEST:MyLCD|mDLY[0]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.054      ;
; 0.797  ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[9]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.063      ;
; 0.797  ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[10]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.063      ;
; 0.800  ; frequency_rot:divisor|counter[6]          ; frequency_rot:divisor|counter[6]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.066      ;
; 0.801  ; frequency_rot:divisor|counter[22]         ; frequency_rot:divisor|counter[22]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.067      ;
; 0.802  ; frequency_rot:divisor|counter[20]         ; frequency_rot:divisor|counter[20]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.068      ;
; 0.802  ; frequency_rot:divisor|counter[24]         ; frequency_rot:divisor|counter[24]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.068      ;
; 0.802  ; frequency_rot:divisor|counter[11]         ; frequency_rot:divisor|counter[11]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.068      ;
; 0.802  ; frequency_rot:divisor|counter[12]         ; frequency_rot:divisor|counter[12]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.068      ;
; 0.805  ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[2]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.071      ;
; 0.806  ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.806  ; frequency_rot:divisor|counter[4]          ; frequency_rot:divisor|counter[4]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.072      ;
; 0.810  ; LCD_TEST:MyLCD|mDLY[6]                    ; LCD_TEST:MyLCD|mDLY[6]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.076      ;
; 0.810  ; LCD_TEST:MyLCD|mDLY[7]                    ; LCD_TEST:MyLCD|mDLY[7]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.076      ;
; 0.810  ; frequency_rot:divisor|counter[1]          ; frequency_rot:divisor|counter[1]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.076      ;
; 0.813  ; LCD_TEST:MyLCD|mDLY[11]                   ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.079      ;
; 0.814  ; LCD_TEST:MyLCD|mDLY[8]                    ; LCD_TEST:MyLCD|mDLY[8]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.080      ;
; 0.814  ; LCD_TEST:MyLCD|mDLY[13]                   ; LCD_TEST:MyLCD|mDLY[13]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.080      ;
; 0.814  ; LCD_TEST:MyLCD|mDLY[16]                   ; LCD_TEST:MyLCD|mDLY[16]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.080      ;
; 0.815  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.081      ;
; 0.819  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.085      ;
; 0.820  ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.086      ;
; 0.823  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.089      ;
; 0.827  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.093      ;
; 0.828  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.094      ;
; 0.830  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.096      ;
; 0.831  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.004      ; 1.101      ;
; 0.834  ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.096      ;
; 0.838  ; frequency_rot:divisor|counter[0]          ; frequency_rot:divisor|counter[0]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.104      ;
; 0.838  ; frequency_rot:divisor|counter[21]         ; frequency_rot:divisor|counter[21]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.104      ;
; 0.838  ; frequency_rot:divisor|counter[23]         ; frequency_rot:divisor|counter[23]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.104      ;
; 0.838  ; frequency_rot:divisor|counter[25]         ; frequency_rot:divisor|counter[25]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.104      ;
; 0.839  ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.105      ;
; 0.839  ; frequency_rot:divisor|counter[3]          ; frequency_rot:divisor|counter[3]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.105      ;
; 0.841  ; frequency_rot:divisor|counter[5]          ; frequency_rot:divisor|counter[5]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.107      ;
; 0.841  ; frequency_rot:divisor|counter[7]          ; frequency_rot:divisor|counter[7]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.107      ;
; 0.844  ; LCD_TEST:MyLCD|mDLY[1]                    ; LCD_TEST:MyLCD|mDLY[1]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.110      ;
; 0.845  ; LCD_TEST:MyLCD|mDLY[3]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.845  ; LCD_TEST:MyLCD|mDLY[12]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.845  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mDLY[17]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.845  ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.111      ;
; 0.846  ; LCD_TEST:MyLCD|mDLY[5]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.846  ; LCD_TEST:MyLCD|mDLY[14]                   ; LCD_TEST:MyLCD|mDLY[14]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.846  ; frequency_rot:divisor|counter[9]          ; frequency_rot:divisor|counter[9]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.847  ; LCD_TEST:MyLCD|mDLY[15]                   ; LCD_TEST:MyLCD|mDLY[15]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.113      ;
; 0.853  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.119      ;
; 0.862  ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.128      ;
; 0.865  ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.131      ;
; 0.948  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.214      ;
; 0.948  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.214      ;
; 0.949  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[5]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.211      ;
; 0.953  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_RS                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.215      ;
; 0.979  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.241      ;
; 0.984  ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[4]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.246      ;
; 0.992  ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[6]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.254      ;
; 0.995  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|mLCD_DATA[2]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.257      ;
; 1.001  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|mLCD_DATA[1]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.263      ;
; 1.002  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|mLCD_DATA[0]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.264      ;
; 1.014  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.004      ; 1.284      ;
; 1.018  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.284      ;
; 1.028  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mLCD_ST.000011             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 1.292      ;
; 1.032  ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.298      ;
; 1.046  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 1.310      ;
; 1.052  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 1.316      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.091  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.353      ;
; 1.094  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[4]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.356      ;
; 1.110  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.376      ;
; 1.112  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.378      ;
; 1.116  ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|mLCD_DATA[3]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.004     ; 1.378      ;
; 1.116  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 1.382      ;
+--------+-------------------------------------------+-------------------------------------------+---------------------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'frequency_rot:divisor|clock_1hz'                                                                                                                                  ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                       ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; -2.229 ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.000        ; 2.370      ; 0.657      ;
; -1.729 ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; -0.500       ; 2.370      ; 0.657      ;
; -0.769 ; counter_rot:contador|value[3] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 1.360      ; 0.857      ;
; -0.765 ; counter_rot:contador|value[3] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 1.360      ; 0.861      ;
; -0.464 ; counter_rot:contador|value[2] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 1.360      ; 1.162      ;
; -0.461 ; counter_rot:contador|value[2] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 1.360      ; 1.165      ;
; -0.407 ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.000        ; 1.010      ; 1.119      ;
; -0.398 ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.000        ; 1.010      ; 1.128      ;
; 0.093  ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; -0.500       ; 1.010      ; 1.119      ;
; 0.102  ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; -0.500       ; 1.010      ; 1.128      ;
; 0.391  ; counter_rot:contador|value[3] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; counter_rot:contador|value[2] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.657      ;
; 0.391  ; counter_rot:contador|value[0] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.657      ;
; 0.831  ; counter_rot:contador|value[0] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 1.097      ;
; 0.864  ; counter_rot:contador|value[3] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 1.130      ;
; 0.868  ; counter_rot:contador|value[2] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 1.134      ;
; 1.915  ; counter_rot:contador|value[0] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; -1.360     ; 0.821      ;
; 1.916  ; counter_rot:contador|value[0] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; -1.360     ; 0.822      ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'counter_rot:contador|value[1]'                                                                                                                                              ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                                   ; Launch Clock                    ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; -2.087 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.000        ; 3.152      ; 1.315      ;
; -1.980 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.000        ; 3.152      ; 1.422      ;
; -1.587 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; -0.500       ; 3.152      ; 1.315      ;
; -1.480 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; -0.500       ; 3.152      ; 1.422      ;
; -0.309 ; counter_rot:contador|value[2] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 2.142      ; 1.333      ;
; -0.189 ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 2.142      ; 1.453      ;
; -0.138 ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 2.142      ; 1.504      ;
; 0.863  ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 0.782      ; 1.145      ;
; 0.882  ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 0.782      ; 1.164      ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000011             ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'frequency_rot:divisor|clock_1hz'                                                                             ;
+--------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                           ; Clock Edge ; Target                             ;
+--------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[3]      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|outclk   ;
+--------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'counter_rot:contador|value[1]'                                                                                   ;
+-------+--------------+----------------+------------------+-------------------------------+------------+-------------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                         ; Clock Edge ; Target                                    ;
+-------+--------------+----------------+------------------+-------------------------------+------------+-------------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Rise       ; contador|value[1]|regout                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Rise       ; contador|value[1]|regout                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[3] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[3] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|inclk[0]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|inclk[0]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|outclk        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|outclk        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0|combout              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0|combout              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Rise       ; decodificador|Mux2~0|datab                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Rise       ; decodificador|Mux2~0|datab                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[0]|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[0]|datac       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[3]|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[3]|datac       ;
+-------+--------------+----------------+------------------+-------------------------------+------------+-------------------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                         ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port    ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; LCD_DATA[*]  ; CLOCK_50                        ; 6.338 ; 6.338 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[0] ; CLOCK_50                        ; 6.210 ; 6.210 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[1] ; CLOCK_50                        ; 6.336 ; 6.336 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[2] ; CLOCK_50                        ; 6.053 ; 6.053 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[3] ; CLOCK_50                        ; 6.065 ; 6.065 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[4] ; CLOCK_50                        ; 6.033 ; 6.033 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[5] ; CLOCK_50                        ; 6.055 ; 6.055 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[6] ; CLOCK_50                        ; 6.061 ; 6.061 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[7] ; CLOCK_50                        ; 6.338 ; 6.338 ; Rise       ; CLOCK_50                        ;
; LCD_EN       ; CLOCK_50                        ; 6.045 ; 6.045 ; Rise       ; CLOCK_50                        ;
; LCD_RS       ; CLOCK_50                        ; 6.340 ; 6.340 ; Rise       ; CLOCK_50                        ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 4.704 ; 4.782 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ;       ; 4.782 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ; 4.695 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ; 4.704 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ;       ; 4.771 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ;       ; 7.024 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ;       ; 7.024 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ;       ; 6.575 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 6.891 ; 7.065 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ; 6.891 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ; 6.875 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ;       ; 6.871 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ;       ; 7.065 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 4.782 ; 4.704 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ; 4.782 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ;       ; 4.695 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ;       ; 4.704 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ; 4.771 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ; 7.024 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ; 7.024 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ; 6.575 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX2[*]      ; counter_rot:contador|value[1]   ; 8.656 ; 8.656 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[0]     ; counter_rot:contador|value[1]   ; 8.346 ; 8.346 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[3]     ; counter_rot:contador|value[1]   ; 8.656 ; 8.656 ; Fall       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 7.065 ; 6.891 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ;       ; 6.891 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ;       ; 6.875 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ; 6.871 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ; 7.065 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; frequency_rot:divisor|clock_1hz ; 7.677 ; 7.677 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[0]     ; frequency_rot:divisor|clock_1hz ; 7.677 ; 7.677 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[1]     ; frequency_rot:divisor|clock_1hz ; 7.631 ; 7.631 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[2]     ; frequency_rot:divisor|clock_1hz ; 7.637 ; 7.637 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[3]     ; frequency_rot:divisor|clock_1hz ; 7.665 ; 7.665 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX1[*]      ; frequency_rot:divisor|clock_1hz ; 8.883 ; 8.883 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[0]     ; frequency_rot:divisor|clock_1hz ; 8.883 ; 8.883 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[3]     ; frequency_rot:divisor|clock_1hz ; 8.440 ; 8.440 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX3[*]      ; frequency_rot:divisor|clock_1hz ; 8.922 ; 8.922 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[0]     ; frequency_rot:divisor|clock_1hz ; 8.749 ; 8.749 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[3]     ; frequency_rot:divisor|clock_1hz ; 8.736 ; 8.736 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[4]     ; frequency_rot:divisor|clock_1hz ; 8.736 ; 8.736 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[5]     ; frequency_rot:divisor|clock_1hz ; 8.922 ; 8.922 ; Rise       ; frequency_rot:divisor|clock_1hz ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port    ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; LCD_DATA[*]  ; CLOCK_50                        ; 6.033 ; 6.033 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[0] ; CLOCK_50                        ; 6.210 ; 6.210 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[1] ; CLOCK_50                        ; 6.336 ; 6.336 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[2] ; CLOCK_50                        ; 6.053 ; 6.053 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[3] ; CLOCK_50                        ; 6.065 ; 6.065 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[4] ; CLOCK_50                        ; 6.033 ; 6.033 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[5] ; CLOCK_50                        ; 6.055 ; 6.055 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[6] ; CLOCK_50                        ; 6.061 ; 6.061 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[7] ; CLOCK_50                        ; 6.338 ; 6.338 ; Rise       ; CLOCK_50                        ;
; LCD_EN       ; CLOCK_50                        ; 6.045 ; 6.045 ; Rise       ; CLOCK_50                        ;
; LCD_RS       ; CLOCK_50                        ; 6.340 ; 6.340 ; Rise       ; CLOCK_50                        ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 4.695 ; 4.771 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ;       ; 4.782 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ; 4.695 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ; 4.704 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ;       ; 4.771 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ;       ; 6.575 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ;       ; 7.024 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ;       ; 6.575 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 6.875 ; 6.871 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ; 6.891 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ; 6.875 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ;       ; 6.871 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ;       ; 7.065 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 4.771 ; 4.695 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ; 4.782 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ;       ; 4.695 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ;       ; 4.704 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ; 4.771 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ; 6.575 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ; 7.024 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ; 6.575 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX2[*]      ; counter_rot:contador|value[1]   ; 8.346 ; 8.346 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[0]     ; counter_rot:contador|value[1]   ; 8.346 ; 8.346 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[3]     ; counter_rot:contador|value[1]   ; 8.656 ; 8.656 ; Fall       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 6.871 ; 6.875 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ;       ; 6.891 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ;       ; 6.875 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ; 6.871 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ; 7.065 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; frequency_rot:divisor|clock_1hz ; 5.730 ; 5.730 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[0]     ; frequency_rot:divisor|clock_1hz ; 5.778 ; 5.778 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[1]     ; frequency_rot:divisor|clock_1hz ; 5.730 ; 5.730 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[2]     ; frequency_rot:divisor|clock_1hz ; 5.737 ; 5.737 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[3]     ; frequency_rot:divisor|clock_1hz ; 5.762 ; 5.762 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX1[*]      ; frequency_rot:divisor|clock_1hz ; 7.108 ; 7.108 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[0]     ; frequency_rot:divisor|clock_1hz ; 7.542 ; 7.542 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[3]     ; frequency_rot:divisor|clock_1hz ; 7.108 ; 7.108 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX3[*]      ; frequency_rot:divisor|clock_1hz ; 7.392 ; 7.392 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[0]     ; frequency_rot:divisor|clock_1hz ; 7.410 ; 7.410 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[3]     ; frequency_rot:divisor|clock_1hz ; 7.394 ; 7.394 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[4]     ; frequency_rot:divisor|clock_1hz ; 7.392 ; 7.392 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[5]     ; frequency_rot:divisor|clock_1hz ; 7.583 ; 7.583 ; Rise       ; frequency_rot:divisor|clock_1hz ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+


+----------------------------------------------------------+
; Fast Model Setup Summary                                 ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; CLOCK_50                        ; -0.674 ; -21.149       ;
; frequency_rot:divisor|clock_1hz ; -0.269 ; -0.537        ;
; counter_rot:contador|value[1]   ; -0.190 ; -0.379        ;
+---------------------------------+--------+---------------+


+----------------------------------------------------------+
; Fast Model Hold Summary                                  ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; CLOCK_50                        ; -1.578 ; -1.578        ;
; frequency_rot:divisor|clock_1hz ; -1.366 ; -2.572        ;
; counter_rot:contador|value[1]   ; -1.249 ; -2.419        ;
+---------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                   ;
+---------------------------------+--------+---------------+
; Clock                           ; Slack  ; End Point TNS ;
+---------------------------------+--------+---------------+
; CLOCK_50                        ; -1.380 ; -79.380       ;
; frequency_rot:divisor|clock_1hz ; -0.500 ; -4.000        ;
; counter_rot:contador|value[1]   ; 0.500  ; 0.000         ;
+---------------------------------+--------+---------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                                         ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.674 ; LCD_TEST:MyLCD|mDLY[1]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.706      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.655 ; LCD_TEST:MyLCD|mDLY[2]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.687      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.651 ; LCD_TEST:MyLCD|mDLY[8]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.683      ;
; -0.635 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.673      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; LCD_TEST:MyLCD|mDLY[3]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.645      ;
; -0.600 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.638      ;
; -0.591 ; frequency_rot:divisor|counter[11] ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.015      ; 1.638      ;
; -0.590 ; frequency_rot:divisor|counter[1]  ; frequency_rot:divisor|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.628      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.576 ; LCD_TEST:MyLCD|mDLY[6]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.608      ;
; -0.565 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.603      ;
; -0.556 ; frequency_rot:divisor|counter[2]  ; frequency_rot:divisor|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.594      ;
; -0.555 ; frequency_rot:divisor|counter[1]  ; frequency_rot:divisor|counter[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.593      ;
; -0.552 ; frequency_rot:divisor|counter[8]  ; frequency_rot:divisor|clock_1hz   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.015      ; 1.599      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.539 ; LCD_TEST:MyLCD|mDLY[15]           ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.562      ;
; -0.536 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.574      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.532 ; LCD_TEST:MyLCD|mDLY[5]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.564      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; LCD_TEST:MyLCD|mDLY[4]            ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.563      ;
; -0.531 ; frequency_rot:divisor|counter[3]  ; frequency_rot:divisor|counter[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.569      ;
; -0.530 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.568      ;
; -0.530 ; frequency_rot:divisor|counter[0]  ; frequency_rot:divisor|counter[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.006      ; 1.568      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[8]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.526 ; LCD_TEST:MyLCD|mDLY[16]           ; LCD_TEST:MyLCD|mDLY[7]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.549      ;
; -0.521 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[0]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.544      ;
; -0.521 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[1]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.544      ;
; -0.521 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[2]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.544      ;
; -0.521 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[3]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.544      ;
; -0.521 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[4]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.544      ;
; -0.521 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[5]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.544      ;
; -0.521 ; LCD_TEST:MyLCD|mDLY[12]           ; LCD_TEST:MyLCD|mDLY[6]            ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.009     ; 1.544      ;
+--------+-----------------------------------+-----------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'frequency_rot:divisor|clock_1hz'                                                                                                                                 ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                       ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; -0.269 ; counter_rot:contador|value[0] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; -0.889     ; 0.412      ;
; -0.268 ; counter_rot:contador|value[0] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; -0.889     ; 0.411      ;
; 0.467  ; counter_rot:contador|value[3] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.565      ;
; 0.471  ; counter_rot:contador|value[2] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.561      ;
; 0.503  ; counter_rot:contador|value[0] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.529      ;
; 0.665  ; counter_rot:contador|value[0] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.367      ;
; 0.665  ; counter_rot:contador|value[3] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.367      ;
; 0.665  ; counter_rot:contador|value[2] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.000      ; 0.367      ;
; 0.676  ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.500        ; 0.551      ; 0.548      ;
; 0.682  ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.500        ; 0.551      ; 0.542      ;
; 1.176  ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.551      ; 0.548      ;
; 1.182  ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.551      ; 0.542      ;
; 1.360  ; counter_rot:contador|value[2] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.889      ; 0.561      ;
; 1.363  ; counter_rot:contador|value[2] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.889      ; 0.558      ;
; 1.488  ; counter_rot:contador|value[3] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.889      ; 0.433      ;
; 1.492  ; counter_rot:contador|value[3] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 1.000        ; 0.889      ; 0.429      ;
; 1.746  ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.500        ; 1.440      ; 0.367      ;
; 2.246  ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 1.000        ; 1.440      ; 0.367      ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'counter_rot:contador|value[1]'                                                                                                                                             ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                                   ; Launch Clock                    ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; -0.190 ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 0.277      ; 0.552      ;
; -0.189 ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 0.278      ; 0.541      ;
; 0.546  ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 1.166      ; 0.705      ;
; 0.546  ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 1.167      ; 0.695      ;
; 0.626  ; counter_rot:contador|value[2] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; 0.500        ; 1.166      ; 0.625      ;
; 1.255  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.500        ; 1.717      ; 0.688      ;
; 1.323  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.500        ; 1.718      ; 0.610      ;
; 1.755  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 1.000        ; 1.717      ; 0.688      ;
; 1.823  ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 1.000        ; 1.718      ; 0.610      ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                                                             ;
+--------+-------------------------------------------+-------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                 ; To Node                                   ; Launch Clock                    ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------------+-------------------------------------------+---------------------------------+-------------+--------------+------------+------------+
; -1.578 ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz ; CLOCK_50    ; 0.000        ; 1.652      ; 0.367      ;
; -1.078 ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz           ; frequency_rot:divisor|clock_1hz ; CLOCK_50    ; -0.500       ; 1.652      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.249  ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.401      ;
; 0.249  ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.401      ;
; 0.251  ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.403      ;
; 0.252  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000011             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.404      ;
; 0.255  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.407      ;
; 0.255  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.407      ;
; 0.263  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.415      ;
; 0.266  ; LCD_TEST:MyLCD|mLCD_ST.000011             ; LCD_TEST:MyLCD|mLCD_ST.000000             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.418      ;
; 0.282  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.434      ;
; 0.308  ; LCD_TEST:MyLCD|mLCD_ST.000001             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.460      ;
; 0.341  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 0.491      ;
; 0.350  ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.502      ;
; 0.354  ; LCD_TEST:MyLCD|mDLY[0]                    ; LCD_TEST:MyLCD|mDLY[0]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.506      ;
; 0.357  ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[9]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.509      ;
; 0.357  ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[10]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.509      ;
; 0.358  ; frequency_rot:divisor|counter[20]         ; frequency_rot:divisor|counter[20]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.358  ; frequency_rot:divisor|counter[22]         ; frequency_rot:divisor|counter[22]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.358  ; frequency_rot:divisor|counter[24]         ; frequency_rot:divisor|counter[24]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.358  ; frequency_rot:divisor|counter[11]         ; frequency_rot:divisor|counter[11]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.358  ; frequency_rot:divisor|counter[12]         ; frequency_rot:divisor|counter[12]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.359  ; frequency_rot:divisor|counter[6]          ; frequency_rot:divisor|counter[6]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.361  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 0.511      ;
; 0.362  ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[2]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.514      ;
; 0.362  ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[4]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.514      ;
; 0.363  ; frequency_rot:divisor|counter[1]          ; frequency_rot:divisor|counter[1]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.515      ;
; 0.363  ; frequency_rot:divisor|counter[4]          ; frequency_rot:divisor|counter[4]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.515      ;
; 0.365  ; LCD_TEST:MyLCD|mDLY[6]                    ; LCD_TEST:MyLCD|mDLY[6]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.517      ;
; 0.365  ; LCD_TEST:MyLCD|mDLY[8]                    ; LCD_TEST:MyLCD|mDLY[8]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.517      ;
; 0.365  ; LCD_TEST:MyLCD|mDLY[7]                    ; LCD_TEST:MyLCD|mDLY[7]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.517      ;
; 0.366  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.518      ;
; 0.367  ; LCD_TEST:MyLCD|mDLY[11]                   ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.368  ; LCD_TEST:MyLCD|mDLY[13]                   ; LCD_TEST:MyLCD|mDLY[13]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.520      ;
; 0.368  ; LCD_TEST:MyLCD|mDLY[16]                   ; LCD_TEST:MyLCD|mDLY[16]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.520      ;
; 0.368  ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; LCD_TEST:MyLCD|LUT_INDEX[1]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.520      ;
; 0.371  ; frequency_rot:divisor|counter[0]          ; frequency_rot:divisor|counter[0]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.371  ; frequency_rot:divisor|counter[21]         ; frequency_rot:divisor|counter[21]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.371  ; frequency_rot:divisor|counter[23]         ; frequency_rot:divisor|counter[23]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.372  ; frequency_rot:divisor|counter[3]          ; frequency_rot:divisor|counter[3]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; frequency_rot:divisor|counter[25]         ; frequency_rot:divisor|counter[25]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.375  ; frequency_rot:divisor|counter[5]          ; frequency_rot:divisor|counter[5]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.527      ;
; 0.375  ; frequency_rot:divisor|counter[7]          ; frequency_rot:divisor|counter[7]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.527      ;
; 0.376  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mDLY[17]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.376  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.376  ; frequency_rot:divisor|counter[9]          ; frequency_rot:divisor|counter[9]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.377  ; LCD_TEST:MyLCD|mDLY[1]                    ; LCD_TEST:MyLCD|mDLY[1]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.377  ; LCD_TEST:MyLCD|mDLY[12]                   ; LCD_TEST:MyLCD|mDLY[12]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.377  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.377  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.378  ; LCD_TEST:MyLCD|mDLY[3]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.530      ;
; 0.378  ; LCD_TEST:MyLCD|mDLY[14]                   ; LCD_TEST:MyLCD|mDLY[14]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.530      ;
; 0.378  ; LCD_TEST:MyLCD|mDLY[15]                   ; LCD_TEST:MyLCD|mDLY[15]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.530      ;
; 0.379  ; LCD_TEST:MyLCD|mDLY[5]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.531      ;
; 0.381  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.533      ;
; 0.382  ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.534      ;
; 0.383  ; LCD_TEST:MyLCD|mLCD_ST.000010             ; LCD_TEST:MyLCD|mLCD_Start                 ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.535      ;
; 0.384  ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.536      ;
; 0.385  ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; LCD_TEST:MyLCD|LUT_INDEX[2]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.537      ;
; 0.393  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.002      ; 0.547      ;
; 0.393  ; LCD_TEST:MyLCD|LUT_INDEX[3]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.544      ;
; 0.393  ; LCD_TEST:MyLCD|mLCD_Start                 ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.545      ;
; 0.451  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.603      ;
; 0.453  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[5]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.604      ;
; 0.456  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.002      ; 0.610      ;
; 0.456  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_DATA[7]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.607      ;
; 0.458  ; LCD_TEST:MyLCD|LUT_INDEX[5]               ; LCD_TEST:MyLCD|mLCD_RS                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.609      ;
; 0.458  ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[4]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.609      ;
; 0.462  ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.614      ;
; 0.467  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mLCD_ST.000001             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 0.617      ;
; 0.473  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|mLCD_DATA[0]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.624      ;
; 0.473  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mLCD_ST.000010             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 0.623      ;
; 0.481  ; LCD_TEST:MyLCD|mDLY[17]                   ; LCD_TEST:MyLCD|mLCD_ST.000011             ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.002     ; 0.631      ;
; 0.488  ; LCD_TEST:MyLCD|LUT_INDEX[4]               ; LCD_TEST:MyLCD|mLCD_DATA[6]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.639      ;
; 0.489  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.641      ;
; 0.492  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|mLCD_DATA[2]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.643      ;
; 0.492  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.644      ;
; 0.494  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.646      ;
; 0.494  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.646      ;
; 0.495  ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.647      ;
; 0.495  ; LCD_TEST:MyLCD|mDLY[9]                    ; LCD_TEST:MyLCD|mDLY[10]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.647      ;
; 0.495  ; LCD_TEST:MyLCD|mDLY[10]                   ; LCD_TEST:MyLCD|mDLY[11]                   ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.647      ;
; 0.496  ; frequency_rot:divisor|counter[11]         ; frequency_rot:divisor|counter[12]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.648      ;
; 0.496  ; frequency_rot:divisor|counter[22]         ; frequency_rot:divisor|counter[23]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.648      ;
; 0.496  ; frequency_rot:divisor|counter[24]         ; frequency_rot:divisor|counter[25]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.648      ;
; 0.497  ; frequency_rot:divisor|counter[6]          ; frequency_rot:divisor|counter[7]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.649      ;
; 0.497  ; frequency_rot:divisor|counter[8]          ; frequency_rot:divisor|counter[9]          ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.649      ;
; 0.498  ; LCD_TEST:MyLCD|LUT_INDEX[0]               ; LCD_TEST:MyLCD|mLCD_DATA[1]               ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; -0.001     ; 0.649      ;
; 0.500  ; frequency_rot:divisor|counter[19]         ; frequency_rot:divisor|counter[20]         ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.652      ;
; 0.500  ; LCD_TEST:MyLCD|mDLY[2]                    ; LCD_TEST:MyLCD|mDLY[3]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.652      ;
; 0.500  ; LCD_TEST:MyLCD|mDLY[4]                    ; LCD_TEST:MyLCD|mDLY[5]                    ; CLOCK_50                        ; CLOCK_50    ; 0.000        ; 0.000      ; 0.652      ;
+--------+-------------------------------------------+-------------------------------------------+---------------------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'frequency_rot:divisor|clock_1hz'                                                                                                                                  ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                       ; Launch Clock                    ; Latch Clock                     ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+
; -1.366 ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.000        ; 1.440      ; 0.367      ;
; -0.866 ; counter_rot:contador|value[1] ; counter_rot:contador|value[1] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; -0.500       ; 1.440      ; 0.367      ;
; -0.612 ; counter_rot:contador|value[3] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.889      ; 0.429      ;
; -0.608 ; counter_rot:contador|value[3] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.889      ; 0.433      ;
; -0.483 ; counter_rot:contador|value[2] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.889      ; 0.558      ;
; -0.480 ; counter_rot:contador|value[2] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.889      ; 0.561      ;
; -0.302 ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.551      ; 0.542      ;
; -0.296 ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.551      ; 0.548      ;
; 0.198  ; counter_rot:contador|value[1] ; counter_rot:contador|value[3] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; -0.500       ; 0.551      ; 0.542      ;
; 0.204  ; counter_rot:contador|value[1] ; counter_rot:contador|value[2] ; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; -0.500       ; 0.551      ; 0.548      ;
; 0.215  ; counter_rot:contador|value[3] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; counter_rot:contador|value[2] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; counter_rot:contador|value[0] ; counter_rot:contador|value[0] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.367      ;
; 0.377  ; counter_rot:contador|value[0] ; counter_rot:contador|value[1] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.529      ;
; 0.409  ; counter_rot:contador|value[2] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.561      ;
; 0.413  ; counter_rot:contador|value[3] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; 0.000      ; 0.565      ;
; 1.148  ; counter_rot:contador|value[0] ; counter_rot:contador|value[2] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; -0.889     ; 0.411      ;
; 1.149  ; counter_rot:contador|value[0] ; counter_rot:contador|value[3] ; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 0.000        ; -0.889     ; 0.412      ;
+--------+-------------------------------+-------------------------------+---------------------------------+---------------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'counter_rot:contador|value[1]'                                                                                                                                              ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; Slack  ; From Node                     ; To Node                                   ; Launch Clock                    ; Latch Clock                   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+
; -1.249 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.000        ; 1.718      ; 0.610      ;
; -1.170 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; 0.000        ; 1.717      ; 0.688      ;
; -0.749 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[0] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; -0.500       ; 1.718      ; 0.610      ;
; -0.670 ; counter_rot:contador|value[1] ; decoder_rot:decodificador|segment_out1[3] ; counter_rot:contador|value[1]   ; counter_rot:contador|value[1] ; -0.500       ; 1.717      ; 0.688      ;
; -0.041 ; counter_rot:contador|value[2] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 1.166      ; 0.625      ;
; 0.028  ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 1.167      ; 0.695      ;
; 0.039  ; counter_rot:contador|value[3] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 1.166      ; 0.705      ;
; 0.763  ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[0] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 0.278      ; 0.541      ;
; 0.775  ; counter_rot:contador|value[0] ; decoder_rot:decodificador|segment_out1[3] ; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1] ; -0.500       ; 0.277      ; 0.552      ;
+--------+-------------------------------+-------------------------------------------+---------------------------------+-------------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                    ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|Cont[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|LCD_EN   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.00    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.01    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.10    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|ST.11    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|mStart   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|oDone    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LCD_Controller:u0|preStart ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|LUT_INDEX[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[10]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[11]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[12]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[13]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[14]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[15]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[16]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[17]                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[5]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[6]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[7]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[8]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mDLY[9]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_DATA[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_RS                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000000             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000001             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000010             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; LCD_TEST:MyLCD|mLCD_ST.000011             ;
+--------+--------------+----------------+------------------+----------+------------+-------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'frequency_rot:divisor|clock_1hz'                                                                             ;
+--------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                           ; Clock Edge ; Target                             ;
+--------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; counter_rot:contador|value[3]      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; contador|value[3]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; frequency_rot:divisor|clock_1hz ; Rise       ; divisor|clock_1hz~clkctrl|outclk   ;
+--------+--------------+----------------+------------------+---------------------------------+------------+------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'counter_rot:contador|value[1]'                                                                                   ;
+-------+--------------+----------------+------------------+-------------------------------+------------+-------------------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock                         ; Clock Edge ; Target                                    ;
+-------+--------------+----------------+------------------+-------------------------------+------------+-------------------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Rise       ; contador|value[1]|regout                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Rise       ; contador|value[1]|regout                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[3] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decoder_rot:decodificador|segment_out1[3] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|inclk[0]      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|inclk[0]      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|outclk        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0clkctrl|outclk        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0|combout              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|Mux2~0|combout              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Rise       ; decodificador|Mux2~0|datab                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Rise       ; decodificador|Mux2~0|datab                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[0]|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[0]|datac       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[3]|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; counter_rot:contador|value[1] ; Fall       ; decodificador|segment_out1[3]|datac       ;
+-------+--------------+----------------+------------------+-------------------------------+------------+-------------------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                         ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port    ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; LCD_DATA[*]  ; CLOCK_50                        ; 3.571 ; 3.571 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[0] ; CLOCK_50                        ; 3.509 ; 3.509 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[1] ; CLOCK_50                        ; 3.564 ; 3.564 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[2] ; CLOCK_50                        ; 3.445 ; 3.445 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[3] ; CLOCK_50                        ; 3.449 ; 3.449 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[4] ; CLOCK_50                        ; 3.425 ; 3.425 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[5] ; CLOCK_50                        ; 3.439 ; 3.439 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[6] ; CLOCK_50                        ; 3.447 ; 3.447 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[7] ; CLOCK_50                        ; 3.571 ; 3.571 ; Rise       ; CLOCK_50                        ;
; LCD_EN       ; CLOCK_50                        ; 3.434 ; 3.434 ; Rise       ; CLOCK_50                        ;
; LCD_RS       ; CLOCK_50                        ; 3.571 ; 3.571 ; Rise       ; CLOCK_50                        ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 2.446 ; 2.481 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ;       ; 2.481 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ; 2.437 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ; 2.446 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ;       ; 2.468 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ;       ; 3.631 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ;       ; 3.631 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ;       ; 3.372 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 3.506 ; 3.601 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ; 3.506 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ; 3.505 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ;       ; 3.528 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ;       ; 3.601 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 2.481 ; 2.446 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ; 2.481 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ;       ; 2.437 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ;       ; 2.446 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ; 2.468 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ; 3.631 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ; 3.631 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ; 3.372 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX2[*]      ; counter_rot:contador|value[1]   ; 4.593 ; 4.593 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[0]     ; counter_rot:contador|value[1]   ; 4.296 ; 4.296 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[3]     ; counter_rot:contador|value[1]   ; 4.593 ; 4.593 ; Fall       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 3.601 ; 3.506 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ;       ; 3.506 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ;       ; 3.505 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ; 3.528 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ; 3.601 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; frequency_rot:divisor|clock_1hz ; 4.205 ; 4.205 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[0]     ; frequency_rot:divisor|clock_1hz ; 4.205 ; 4.205 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[1]     ; frequency_rot:divisor|clock_1hz ; 4.134 ; 4.134 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[2]     ; frequency_rot:divisor|clock_1hz ; 4.169 ; 4.169 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[3]     ; frequency_rot:divisor|clock_1hz ; 4.167 ; 4.167 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX1[*]      ; frequency_rot:divisor|clock_1hz ; 4.795 ; 4.795 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[0]     ; frequency_rot:divisor|clock_1hz ; 4.795 ; 4.795 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[3]     ; frequency_rot:divisor|clock_1hz ; 4.542 ; 4.542 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX3[*]      ; frequency_rot:divisor|clock_1hz ; 4.764 ; 4.764 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[0]     ; frequency_rot:divisor|clock_1hz ; 4.692 ; 4.692 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[3]     ; frequency_rot:divisor|clock_1hz ; 4.697 ; 4.697 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[4]     ; frequency_rot:divisor|clock_1hz ; 4.695 ; 4.695 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[5]     ; frequency_rot:divisor|clock_1hz ; 4.764 ; 4.764 ; Rise       ; frequency_rot:divisor|clock_1hz ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port    ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; LCD_DATA[*]  ; CLOCK_50                        ; 3.425 ; 3.425 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[0] ; CLOCK_50                        ; 3.509 ; 3.509 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[1] ; CLOCK_50                        ; 3.564 ; 3.564 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[2] ; CLOCK_50                        ; 3.445 ; 3.445 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[3] ; CLOCK_50                        ; 3.449 ; 3.449 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[4] ; CLOCK_50                        ; 3.425 ; 3.425 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[5] ; CLOCK_50                        ; 3.439 ; 3.439 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[6] ; CLOCK_50                        ; 3.447 ; 3.447 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[7] ; CLOCK_50                        ; 3.571 ; 3.571 ; Rise       ; CLOCK_50                        ;
; LCD_EN       ; CLOCK_50                        ; 3.434 ; 3.434 ; Rise       ; CLOCK_50                        ;
; LCD_RS       ; CLOCK_50                        ; 3.571 ; 3.571 ; Rise       ; CLOCK_50                        ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 2.437 ; 2.468 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ;       ; 2.481 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ; 2.437 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ; 2.446 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ;       ; 2.468 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ;       ; 3.372 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ;       ; 3.631 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ;       ; 3.372 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 3.505 ; 3.528 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ; 3.506 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ; 3.505 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ;       ; 3.528 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ;       ; 3.601 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 2.468 ; 2.437 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ; 2.481 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ;       ; 2.437 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ;       ; 2.446 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ; 2.468 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ; 3.372 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ; 3.631 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ; 3.372 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX2[*]      ; counter_rot:contador|value[1]   ; 4.296 ; 4.296 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[0]     ; counter_rot:contador|value[1]   ; 4.296 ; 4.296 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[3]     ; counter_rot:contador|value[1]   ; 4.593 ; 4.593 ; Fall       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 3.528 ; 3.505 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ;       ; 3.506 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ;       ; 3.505 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ; 3.528 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ; 3.601 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; frequency_rot:divisor|clock_1hz ; 3.012 ; 3.012 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[0]     ; frequency_rot:divisor|clock_1hz ; 3.056 ; 3.056 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[1]     ; frequency_rot:divisor|clock_1hz ; 3.012 ; 3.012 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[2]     ; frequency_rot:divisor|clock_1hz ; 3.021 ; 3.021 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[3]     ; frequency_rot:divisor|clock_1hz ; 3.042 ; 3.042 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX1[*]      ; frequency_rot:divisor|clock_1hz ; 3.571 ; 3.571 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[0]     ; frequency_rot:divisor|clock_1hz ; 3.831 ; 3.831 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[3]     ; frequency_rot:divisor|clock_1hz ; 3.571 ; 3.571 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX3[*]      ; frequency_rot:divisor|clock_1hz ; 3.726 ; 3.726 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[0]     ; frequency_rot:divisor|clock_1hz ; 3.730 ; 3.730 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[3]     ; frequency_rot:divisor|clock_1hz ; 3.731 ; 3.731 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[4]     ; frequency_rot:divisor|clock_1hz ; 3.726 ; 3.726 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[5]     ; frequency_rot:divisor|clock_1hz ; 3.801 ; 3.801 ; Rise       ; frequency_rot:divisor|clock_1hz ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+


+--------------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                              ;
+----------------------------------+----------+---------+----------+---------+---------------------+
; Clock                            ; Setup    ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+----------------------------------+----------+---------+----------+---------+---------------------+
; Worst-case Slack                 ; -2.567   ; -2.533  ; N/A      ; N/A     ; -1.380              ;
;  CLOCK_50                        ; -2.567   ; -2.533  ; N/A      ; N/A     ; -1.380              ;
;  counter_rot:contador|value[1]   ; -0.874   ; -2.087  ; N/A      ; N/A     ; 0.500               ;
;  frequency_rot:divisor|clock_1hz ; -1.146   ; -2.229  ; N/A      ; N/A     ; -0.500              ;
; Design-wide TNS                  ; -123.938 ; -10.399 ; 0.0      ; 0.0     ; -83.38              ;
;  CLOCK_50                        ; -119.850 ; -2.533  ; N/A      ; N/A     ; -79.380             ;
;  counter_rot:contador|value[1]   ; -1.736   ; -4.067  ; N/A      ; N/A     ; 0.000               ;
;  frequency_rot:divisor|clock_1hz ; -2.352   ; -3.799  ; N/A      ; N/A     ; -4.000              ;
+----------------------------------+----------+---------+----------+---------+---------------------+


+---------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                         ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port    ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; LCD_DATA[*]  ; CLOCK_50                        ; 6.338 ; 6.338 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[0] ; CLOCK_50                        ; 6.210 ; 6.210 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[1] ; CLOCK_50                        ; 6.336 ; 6.336 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[2] ; CLOCK_50                        ; 6.053 ; 6.053 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[3] ; CLOCK_50                        ; 6.065 ; 6.065 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[4] ; CLOCK_50                        ; 6.033 ; 6.033 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[5] ; CLOCK_50                        ; 6.055 ; 6.055 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[6] ; CLOCK_50                        ; 6.061 ; 6.061 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[7] ; CLOCK_50                        ; 6.338 ; 6.338 ; Rise       ; CLOCK_50                        ;
; LCD_EN       ; CLOCK_50                        ; 6.045 ; 6.045 ; Rise       ; CLOCK_50                        ;
; LCD_RS       ; CLOCK_50                        ; 6.340 ; 6.340 ; Rise       ; CLOCK_50                        ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 4.704 ; 4.782 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ;       ; 4.782 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ; 4.695 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ; 4.704 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ;       ; 4.771 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ;       ; 7.024 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ;       ; 7.024 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ;       ; 6.575 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 6.891 ; 7.065 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ; 6.891 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ; 6.875 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ;       ; 6.871 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ;       ; 7.065 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 4.782 ; 4.704 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ; 4.782 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ;       ; 4.695 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ;       ; 4.704 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ; 4.771 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ; 7.024 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ; 7.024 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ; 6.575 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX2[*]      ; counter_rot:contador|value[1]   ; 8.656 ; 8.656 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[0]     ; counter_rot:contador|value[1]   ; 8.346 ; 8.346 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[3]     ; counter_rot:contador|value[1]   ; 8.656 ; 8.656 ; Fall       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 7.065 ; 6.891 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ;       ; 6.891 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ;       ; 6.875 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ; 6.871 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ; 7.065 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; frequency_rot:divisor|clock_1hz ; 7.677 ; 7.677 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[0]     ; frequency_rot:divisor|clock_1hz ; 7.677 ; 7.677 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[1]     ; frequency_rot:divisor|clock_1hz ; 7.631 ; 7.631 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[2]     ; frequency_rot:divisor|clock_1hz ; 7.637 ; 7.637 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[3]     ; frequency_rot:divisor|clock_1hz ; 7.665 ; 7.665 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX1[*]      ; frequency_rot:divisor|clock_1hz ; 8.883 ; 8.883 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[0]     ; frequency_rot:divisor|clock_1hz ; 8.883 ; 8.883 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[3]     ; frequency_rot:divisor|clock_1hz ; 8.440 ; 8.440 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX3[*]      ; frequency_rot:divisor|clock_1hz ; 8.922 ; 8.922 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[0]     ; frequency_rot:divisor|clock_1hz ; 8.749 ; 8.749 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[3]     ; frequency_rot:divisor|clock_1hz ; 8.736 ; 8.736 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[4]     ; frequency_rot:divisor|clock_1hz ; 8.736 ; 8.736 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[5]     ; frequency_rot:divisor|clock_1hz ; 8.922 ; 8.922 ; Rise       ; frequency_rot:divisor|clock_1hz ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; Data Port    ; Clock Port                      ; Rise  ; Fall  ; Clock Edge ; Clock Reference                 ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+
; LCD_DATA[*]  ; CLOCK_50                        ; 3.425 ; 3.425 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[0] ; CLOCK_50                        ; 3.509 ; 3.509 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[1] ; CLOCK_50                        ; 3.564 ; 3.564 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[2] ; CLOCK_50                        ; 3.445 ; 3.445 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[3] ; CLOCK_50                        ; 3.449 ; 3.449 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[4] ; CLOCK_50                        ; 3.425 ; 3.425 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[5] ; CLOCK_50                        ; 3.439 ; 3.439 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[6] ; CLOCK_50                        ; 3.447 ; 3.447 ; Rise       ; CLOCK_50                        ;
;  LCD_DATA[7] ; CLOCK_50                        ; 3.571 ; 3.571 ; Rise       ; CLOCK_50                        ;
; LCD_EN       ; CLOCK_50                        ; 3.434 ; 3.434 ; Rise       ; CLOCK_50                        ;
; LCD_RS       ; CLOCK_50                        ; 3.571 ; 3.571 ; Rise       ; CLOCK_50                        ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 2.437 ; 2.468 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ;       ; 2.481 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ; 2.437 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ; 2.446 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ;       ; 2.468 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ;       ; 3.372 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ;       ; 3.631 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ;       ; 3.372 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 3.505 ; 3.528 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ; 3.506 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ; 3.505 ;       ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ;       ; 3.528 ; Rise       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ;       ; 3.601 ; Rise       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; counter_rot:contador|value[1]   ; 2.468 ; 2.437 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[0]     ; counter_rot:contador|value[1]   ; 2.481 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[1]     ; counter_rot:contador|value[1]   ;       ; 2.437 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[2]     ; counter_rot:contador|value[1]   ;       ; 2.446 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX0[3]     ; counter_rot:contador|value[1]   ; 2.468 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX1[*]      ; counter_rot:contador|value[1]   ; 3.372 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[0]     ; counter_rot:contador|value[1]   ; 3.631 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX1[3]     ; counter_rot:contador|value[1]   ; 3.372 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX2[*]      ; counter_rot:contador|value[1]   ; 4.296 ; 4.296 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[0]     ; counter_rot:contador|value[1]   ; 4.296 ; 4.296 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX2[3]     ; counter_rot:contador|value[1]   ; 4.593 ; 4.593 ; Fall       ; counter_rot:contador|value[1]   ;
; HEX3[*]      ; counter_rot:contador|value[1]   ; 3.528 ; 3.505 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[0]     ; counter_rot:contador|value[1]   ;       ; 3.506 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[3]     ; counter_rot:contador|value[1]   ;       ; 3.505 ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[4]     ; counter_rot:contador|value[1]   ; 3.528 ;       ; Fall       ; counter_rot:contador|value[1]   ;
;  HEX3[5]     ; counter_rot:contador|value[1]   ; 3.601 ;       ; Fall       ; counter_rot:contador|value[1]   ;
; HEX0[*]      ; frequency_rot:divisor|clock_1hz ; 3.012 ; 3.012 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[0]     ; frequency_rot:divisor|clock_1hz ; 3.056 ; 3.056 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[1]     ; frequency_rot:divisor|clock_1hz ; 3.012 ; 3.012 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[2]     ; frequency_rot:divisor|clock_1hz ; 3.021 ; 3.021 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX0[3]     ; frequency_rot:divisor|clock_1hz ; 3.042 ; 3.042 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX1[*]      ; frequency_rot:divisor|clock_1hz ; 3.571 ; 3.571 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[0]     ; frequency_rot:divisor|clock_1hz ; 3.831 ; 3.831 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX1[3]     ; frequency_rot:divisor|clock_1hz ; 3.571 ; 3.571 ; Rise       ; frequency_rot:divisor|clock_1hz ;
; HEX3[*]      ; frequency_rot:divisor|clock_1hz ; 3.726 ; 3.726 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[0]     ; frequency_rot:divisor|clock_1hz ; 3.730 ; 3.730 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[3]     ; frequency_rot:divisor|clock_1hz ; 3.731 ; 3.731 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[4]     ; frequency_rot:divisor|clock_1hz ; 3.726 ; 3.726 ; Rise       ; frequency_rot:divisor|clock_1hz ;
;  HEX3[5]     ; frequency_rot:divisor|clock_1hz ; 3.801 ; 3.801 ; Rise       ; frequency_rot:divisor|clock_1hz ;
+--------------+---------------------------------+-------+-------+------------+---------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                               ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; From Clock                      ; To Clock                        ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; CLOCK_50                        ; CLOCK_50                        ; 1412     ; 0        ; 0        ; 0        ;
; frequency_rot:divisor|clock_1hz ; CLOCK_50                        ; 1        ; 1        ; 0        ; 0        ;
; counter_rot:contador|value[1]   ; counter_rot:contador|value[1]   ; 0        ; 0        ; 2        ; 2        ;
; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1]   ; 0        ; 0        ; 5        ; 0        ;
; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 3        ; 3        ; 0        ; 0        ;
; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 12       ; 0        ; 0        ; 0        ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                                ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; From Clock                      ; To Clock                        ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
; CLOCK_50                        ; CLOCK_50                        ; 1412     ; 0        ; 0        ; 0        ;
; frequency_rot:divisor|clock_1hz ; CLOCK_50                        ; 1        ; 1        ; 0        ; 0        ;
; counter_rot:contador|value[1]   ; counter_rot:contador|value[1]   ; 0        ; 0        ; 2        ; 2        ;
; frequency_rot:divisor|clock_1hz ; counter_rot:contador|value[1]   ; 0        ; 0        ; 5        ; 0        ;
; counter_rot:contador|value[1]   ; frequency_rot:divisor|clock_1hz ; 3        ; 3        ; 0        ; 0        ;
; frequency_rot:divisor|clock_1hz ; frequency_rot:divisor|clock_1hz ; 12       ; 0        ; 0        ; 0        ;
+---------------------------------+---------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 2     ; 2    ;
; Unconstrained Input Port Paths  ; 55    ; 55   ;
; Unconstrained Output Ports      ; 22    ; 22   ;
; Unconstrained Output Port Paths ; 52    ; 52   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Feb 20 15:45:56 2024
Info: Command: quartus_sta Mod_Teste -c Mod_Teste
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 2 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'Mod_Teste.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name frequency_rot:divisor|clock_1hz frequency_rot:divisor|clock_1hz
    Info (332105): create_clock -period 1.000 -name counter_rot:contador|value[1] counter_rot:contador|value[1]
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.567
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.567      -119.850 CLOCK_50 
    Info (332119):    -1.146        -2.352 frequency_rot:divisor|clock_1hz 
    Info (332119):    -0.874        -1.736 counter_rot:contador|value[1] 
Info (332146): Worst-case hold slack is -2.533
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.533        -2.533 CLOCK_50 
    Info (332119):    -2.229        -3.799 frequency_rot:divisor|clock_1hz 
    Info (332119):    -2.087        -4.067 counter_rot:contador|value[1] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -79.380 CLOCK_50 
    Info (332119):    -0.500        -4.000 frequency_rot:divisor|clock_1hz 
    Info (332119):     0.500         0.000 counter_rot:contador|value[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.674
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.674       -21.149 CLOCK_50 
    Info (332119):    -0.269        -0.537 frequency_rot:divisor|clock_1hz 
    Info (332119):    -0.190        -0.379 counter_rot:contador|value[1] 
Info (332146): Worst-case hold slack is -1.578
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.578        -1.578 CLOCK_50 
    Info (332119):    -1.366        -2.572 frequency_rot:divisor|clock_1hz 
    Info (332119):    -1.249        -2.419 counter_rot:contador|value[1] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -79.380 CLOCK_50 
    Info (332119):    -0.500        -4.000 frequency_rot:divisor|clock_1hz 
    Info (332119):     0.500         0.000 counter_rot:contador|value[1] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 4540 megabytes
    Info: Processing ended: Tue Feb 20 15:45:58 2024
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


